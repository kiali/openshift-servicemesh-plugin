// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When addon component has a problem the Icon shows is displayed in orange 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": false,
            "name": "grafana",
            "status": "Unhealthy",
          },
          Object {
            "is_core": true,
            "name": "istio-egressgateway",
            "status": "Healthy",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--warning-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When both core and addon component have problems any component is in not ready the Icon shows is displayed in red 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": false,
            "name": "grafana",
            "status": "Unhealthy",
          },
          Object {
            "is_core": true,
            "name": "istio-egressgateway",
            "status": "Unhealthy",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--danger-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When core component has a problem the Icon shows is displayed in Red 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": false,
            "name": "grafana",
            "status": "Healthy",
          },
          Object {
            "is_core": true,
            "name": "istio-egressgateway",
            "status": "Unhealthy",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--danger-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When there are not-ready components mixed with other not healthy components in addons the Icon is displayed in orange 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": false,
            "name": "grafana",
            "status": "Unhealthy",
          },
          Object {
            "is_core": false,
            "name": "jaeger",
            "status": "NotReady",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--warning-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When there are not-ready components mixed with other not healthy components in both the Icon shows is displayed in red 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": false,
            "name": "grafana",
            "status": "Unhealthy",
          },
          Object {
            "is_core": false,
            "name": "jaeger",
            "status": "NotReady",
          },
          Object {
            "is_core": true,
            "name": "istio-egressgateway",
            "status": "Unhealthy",
          },
          Object {
            "is_core": true,
            "name": "istio-ingressgateway",
            "status": "NotReady",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--danger-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When there are not-ready components mixed with other not healthy components in core the Icon is displayed in red 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": true,
            "name": "istio-egressgateway",
            "status": "Unhealthy",
          },
          Object {
            "is_core": true,
            "name": "istio-ingressgateway",
            "status": "NotReady",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--danger-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When there are not-ready components not mixed with other unhealthy components in addons renders the Icon in blue 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": true,
            "name": "istiod",
            "status": "NotReady",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--info-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;

exports[`When there are not-ready components not mixed with other unhealthy components in core renders the Icon in blue 1`] = `
<Tooltip
  content={
    <IstioStatusList
      status={
        Array [
          Object {
            "is_core": false,
            "name": "jaeger",
            "status": "NotReady",
          },
        ]
      }
    />
  }
  enableFlip={true}
  maxWidth="25rem"
  position="left"
>
  <ResourcesFullIcon
    color="var(--pf-global--info-color--100)"
    noVerticalAlign={false}
    size="sm"
    style={
      Object {
        "marginRight": -8,
        "verticalAlign": "-0.2em",
      }
    }
  />
</Tooltip>
`;
