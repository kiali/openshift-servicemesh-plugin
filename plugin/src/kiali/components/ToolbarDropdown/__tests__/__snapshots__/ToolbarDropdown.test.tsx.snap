// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolbarDropdown Render correctly all dropdowns 1`] = `
<Fragment>
  <span
    className="fzb2262"
  >
    graph_filter_interval_duration
  </span>
  <Select
    aria-describedby=""
    aria-invalid={false}
    aria-label="graph_filter_interval_duration"
    aria-labelledby="graph_filter_interval_duration"
    chipGroupComponent={null}
    className="fhxf3qu"
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    data-test="graph_filter_interval_duration"
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    hasPlaceholderStyle={false}
    id="graph_filter_interval_duration"
    inlineFilterPlaceholderText={null}
    inputAutoComplete="off"
    inputIdPrefix=""
    isCreatable={false}
    isCreateSelectOptionObject={false}
    isDisabled={false}
    isFlipEnabled={false}
    isGrouped={false}
    isInputFilterPersisted={false}
    isInputValuePersisted={false}
    isOpen={false}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    onTypeaheadInputChanged={null}
    ouiaSafe={true}
    placeholderText="1m"
    position="left"
    removeSelectionAriaLabel="Remove"
    selections={60}
    shouldResetOnSelect={true}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId="graph_filter_interval_duration-toggle"
    typeAheadAriaDescribedby=""
    typeAheadAriaLabel=""
    validated="default"
    variant="single"
    width=""
  >
    <SelectOption
      className=""
      component="button"
      id="60"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={true}
      key="60"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="60"
    >
      1m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="120"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="120"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="120"
    >
      2m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="300"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="300"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="300"
    >
      5m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="600"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="600"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="600"
    >
      10m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="1800"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="1800"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="1800"
    >
      30m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="3600"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="3600"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="3600"
    >
      1h
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="10800"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="10800"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="10800"
    >
      3h
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="21600"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="21600"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="21600"
    >
      6h
    </SelectOption>
  </Select>
</Fragment>
`;

exports[`ToolbarDropdown Render correctly all dropdowns 2`] = `
<Fragment>
  <span
    className="fzb2262"
  >
    metrics_filter_poll_interval
  </span>
  <Select
    aria-describedby=""
    aria-invalid={false}
    aria-label="metrics_filter_poll_interval"
    aria-labelledby="metrics_filter_poll_interval"
    chipGroupComponent={null}
    className="fhxf3qu"
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    data-test="metrics_filter_poll_interval"
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    hasPlaceholderStyle={false}
    id="metrics_filter_poll_interval"
    inlineFilterPlaceholderText={null}
    inputAutoComplete="off"
    inputIdPrefix=""
    isCreatable={false}
    isCreateSelectOptionObject={false}
    isDisabled={false}
    isFlipEnabled={false}
    isGrouped={false}
    isInputFilterPersisted={false}
    isInputValuePersisted={false}
    isOpen={false}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    onTypeaheadInputChanged={null}
    ouiaSafe={true}
    placeholderText="Every 1m"
    position="left"
    removeSelectionAriaLabel="Remove"
    selections={60000}
    shouldResetOnSelect={true}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId="metrics_filter_poll_interval-toggle"
    typeAheadAriaDescribedby=""
    typeAheadAriaLabel=""
    validated="default"
    variant="single"
    width=""
  >
    <SelectOption
      className=""
      component="button"
      id="0"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="0"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="0"
    >
      Pause
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="10000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="10000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="10000"
    >
      Every 10s
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="15000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="15000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="15000"
    >
      Every 15s
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="30000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="30000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="30000"
    >
      Every 30s
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="60000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={true}
      key="60000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="60000"
    >
      Every 1m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="300000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="300000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="300000"
    >
      Every 5m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="900000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="900000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="900000"
    >
      Every 15m
    </SelectOption>
  </Select>
</Fragment>
`;

exports[`ToolbarDropdown Render correctly all dropdowns 3`] = `
<Fragment>
  <span
    className="fzb2262"
  >
    graph_filter_layouts
  </span>
  <Select
    aria-describedby=""
    aria-invalid={false}
    aria-label="graph_filter_layouts"
    aria-labelledby="graph_filter_layouts"
    chipGroupComponent={null}
    className="fhxf3qu"
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    data-test="graph_filter_layouts"
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    hasPlaceholderStyle={false}
    id="graph_filter_layouts"
    inlineFilterPlaceholderText={null}
    inputAutoComplete="off"
    inputIdPrefix=""
    isCreatable={false}
    isCreateSelectOptionObject={false}
    isDisabled={false}
    isFlipEnabled={false}
    isGrouped={false}
    isInputFilterPersisted={false}
    isInputValuePersisted={false}
    isOpen={false}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    onTypeaheadInputChanged={null}
    ouiaSafe={true}
    placeholderText=""
    position="left"
    removeSelectionAriaLabel="Remove"
    selections="cola"
    shouldResetOnSelect={true}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId="graph_filter_layouts-toggle"
    typeAheadAriaDescribedby=""
    typeAheadAriaLabel=""
    validated="default"
    variant="single"
    width=""
  >
    <SelectOption
      className=""
      component="button"
      id="kiali-grid"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="kiali-grid"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="kiali-grid"
    >
      Grid
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="kiali-concentric"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="kiali-concentric"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="kiali-concentric"
    >
      Concentric
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="kiali-dagre"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="kiali-dagre"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="kiali-dagre"
    >
      Dagre
    </SelectOption>
  </Select>
</Fragment>
`;

exports[`ToolbarDropdown Render dropdowns correctly with controlled values and labels 1`] = `
<Fragment>
  <span
    className="fzb2262"
  >
    graph_filter_interval_duration
  </span>
  <Select
    aria-describedby=""
    aria-invalid={false}
    aria-label="graph_filter_interval_duration"
    aria-labelledby="graph_filter_interval_duration"
    chipGroupComponent={null}
    className="fhxf3qu"
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    data-test="graph_filter_interval_duration"
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    hasPlaceholderStyle={false}
    id="graph_filter_interval_duration"
    inlineFilterPlaceholderText={null}
    inputAutoComplete="off"
    inputIdPrefix=""
    isCreatable={false}
    isCreateSelectOptionObject={false}
    isDisabled={false}
    isFlipEnabled={false}
    isGrouped={false}
    isInputFilterPersisted={false}
    isInputValuePersisted={false}
    isOpen={false}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    onTypeaheadInputChanged={null}
    ouiaSafe={true}
    placeholderText="1m"
    position="left"
    removeSelectionAriaLabel="Remove"
    selections={60}
    shouldResetOnSelect={true}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId="graph_filter_interval_duration-toggle"
    typeAheadAriaDescribedby=""
    typeAheadAriaLabel=""
    validated="default"
    variant="single"
    width=""
  >
    <SelectOption
      className=""
      component="button"
      id="60"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={true}
      key="60"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="60"
    >
      1m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="120"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="120"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="120"
    >
      2m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="300"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="300"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="300"
    >
      5m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="600"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="600"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="600"
    >
      10m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="1800"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="1800"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="1800"
    >
      30m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="3600"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="3600"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="3600"
    >
      1h
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="10800"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="10800"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="10800"
    >
      3h
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="21600"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="21600"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="21600"
    >
      6h
    </SelectOption>
  </Select>
</Fragment>
`;

exports[`ToolbarDropdown Render dropdowns correctly with controlled values and labels 2`] = `
<Fragment>
  <span
    className="fzb2262"
  >
    metrics_filter_poll_interval
  </span>
  <Select
    aria-describedby=""
    aria-invalid={false}
    aria-label="metrics_filter_poll_interval"
    aria-labelledby="metrics_filter_poll_interval"
    chipGroupComponent={null}
    className="fhxf3qu"
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    data-test="metrics_filter_poll_interval"
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    hasPlaceholderStyle={false}
    id="metrics_filter_poll_interval"
    inlineFilterPlaceholderText={null}
    inputAutoComplete="off"
    inputIdPrefix=""
    isCreatable={false}
    isCreateSelectOptionObject={false}
    isDisabled={false}
    isFlipEnabled={false}
    isGrouped={false}
    isInputFilterPersisted={false}
    isInputValuePersisted={false}
    isOpen={false}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    onTypeaheadInputChanged={null}
    ouiaSafe={true}
    placeholderText="Every 1m"
    position="left"
    removeSelectionAriaLabel="Remove"
    selections={60000}
    shouldResetOnSelect={true}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId="metrics_filter_poll_interval-toggle"
    typeAheadAriaDescribedby=""
    typeAheadAriaLabel=""
    validated="default"
    variant="single"
    width=""
  >
    <SelectOption
      className=""
      component="button"
      id="0"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="0"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="0"
    >
      Pause
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="10000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="10000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="10000"
    >
      Every 10s
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="15000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="15000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="15000"
    >
      Every 15s
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="30000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="30000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="30000"
    >
      Every 30s
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="60000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={true}
      key="60000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="60000"
    >
      Every 1m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="300000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="300000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="300000"
    >
      Every 5m
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="900000"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="900000"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="900000"
    >
      Every 15m
    </SelectOption>
  </Select>
</Fragment>
`;

exports[`ToolbarDropdown Render dropdowns correctly with controlled values and labels 3`] = `
<Fragment>
  <span
    className="fzb2262"
  >
    graph_filter_layouts
  </span>
  <Select
    aria-describedby=""
    aria-invalid={false}
    aria-label="graph_filter_layouts"
    aria-labelledby="graph_filter_layouts"
    chipGroupComponent={null}
    className="fhxf3qu"
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    data-test="graph_filter_layouts"
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    hasPlaceholderStyle={false}
    id="graph_filter_layouts"
    inlineFilterPlaceholderText={null}
    inputAutoComplete="off"
    inputIdPrefix=""
    isCreatable={false}
    isCreateSelectOptionObject={false}
    isDisabled={false}
    isFlipEnabled={false}
    isGrouped={false}
    isInputFilterPersisted={false}
    isInputValuePersisted={false}
    isOpen={false}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    onTypeaheadInputChanged={null}
    ouiaSafe={true}
    placeholderText=""
    position="left"
    removeSelectionAriaLabel="Remove"
    selections="cola"
    shouldResetOnSelect={true}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId="graph_filter_layouts-toggle"
    typeAheadAriaDescribedby=""
    typeAheadAriaLabel=""
    validated="default"
    variant="single"
    width=""
  >
    <SelectOption
      className=""
      component="button"
      id="kiali-grid"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="kiali-grid"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="kiali-grid"
    >
      Grid
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="kiali-concentric"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="kiali-concentric"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="kiali-concentric"
    >
      Concentric
    </SelectOption>
    <SelectOption
      className=""
      component="button"
      id="kiali-dagre"
      index={0}
      inputId=""
      isChecked={false}
      isDisabled={false}
      isFavorite={null}
      isLastOptionBeforeFooter={[Function]}
      isLoad={false}
      isLoading={false}
      isNoResultsOption={false}
      isPlaceholder={false}
      isSelected={false}
      key="kiali-dagre"
      keyHandler={[Function]}
      onClick={[Function]}
      sendRef={[Function]}
      setViewMoreNextIndex={[Function]}
      value="kiali-dagre"
    >
      Dagre
    </SelectOption>
  </Select>
</Fragment>
`;
