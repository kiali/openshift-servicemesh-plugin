- name: Get information about the cluster
  set_fact:
    api_groups: "{{ lookup('kubernetes.core.k8s', cluster_info='api_groups') }}"
- name: Determine the cluster type
  set_fact:
    is_openshift: "{{ True if 'route.openshift.io' in api_groups else False }}"
- name: Determine the Istio implementation
  set_fact:
    is_maistra: "{{ True if 'maistra.io' in api_groups else False }}"

- name: Get OSSMPlugin CR if present
  set_fact:
    ossmplugin_cr: "{{ lookup('kubernetes.core.k8s', api_version='kiali.io/v1alpha1', kind='OSSMPlugin', namespace=cr_namespace, resource_name=custom_resource.metadata.name) }}"

- name: Get OSSMPlugin Operator Pod
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ossmplugin.operator_namespace }}"
    label_selectors:
    - app.kubernetes.io/name = ossmplugin-operator
  register: ossmplugin_operator_pod

- name: Get OSSMPlugin Pod
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ossmplugin.install_namespace }}"
    label_selectors:
    - "app.kubernetes.io/name=ossmplugin"
  register: ossmplugin_pod

- name: Get OSSMPlugin Deployment
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ ossmplugin.install_namespace }}"
    label_selectors:
    - "app.kubernetes.io/name=ossmplugin"
  register: ossmplugin_deployment

- name: Get OSSMPlugin ConfigMap
  set_fact:
    ossmplugin_configmap_resource: "{{ lookup('kubernetes.core.k8s', api_version='v1', kind='ConfigMap', namespace=ossmplugin.install_namespace, resource_name='plugin-conf') }}"
- name: Format OSSMPlugin ConfigMap
  set_fact:
    ossmplugin_configmap: "{{ ossmplugin_configmap_resource.data['plugin-config.json'] | from_json }}"
- name: Dump OSSMPlugin ConfigMap
  debug:
    msg: "{{ ossmplugin_configmap }}"

- name: Get OSSMPlugin ConsolePlugin
  set_fact:
    ossmplugin_consoleplugin: "{{ lookup('kubernetes.core.k8s', api_version='console.openshift.io/v1alpha1', kind='ConsolePlugin', namespace=ossmplugin.install_namespace, resource_name='servicemesh') }}"
- name: Dump OSSMPlugin ConsolePlugin
  debug:
    msg: "{{ ossmplugin_consoleplugin }}"
