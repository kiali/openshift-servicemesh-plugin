- name: Get information about the cluster
  set_fact:
    api_groups: "{{ lookup('kubernetes.core.k8s', cluster_info='api_groups') }}"
- name: Determine the cluster type
  set_fact:
    is_openshift: "{{ True if 'route.openshift.io' in api_groups else False }}"
    is_k8s: "{{ False if 'route.openshift.io' in api_groups else True }}"
    is_minikube: "{{ True if lookup('env', 'MOLECULE_CLUSTER_TYPE') == 'minikube' else False }}"
    is_kind: "{{ True if lookup('env', 'MOLECULE_CLUSTER_TYPE') == 'kind' else False }}"
- name: Determine the Istio implementation
  set_fact:
    is_maistra: "{{ True if 'maistra.io' in api_groups else False }}"

- name: Get SMCP if running in Maistra environment
  k8s_info:
    api_version: maistra.io/v2
    kind: ServiceMeshControlPlane
    namespace: "{{ istio.control_plane_namespace }}"
  register: maistra_smcp
  when:
  - is_maistra == True

- name: There must one and only one SMCP already installed in the control plane
  set_fact:
    maistra_smcp: "{{ maistra_smcp.resources[0] }}"
  when:
  - is_maistra == True

- name: Get OSSMPlugin CR if present
  set_fact:
    ossmplugin_cr: "{{ lookup('kubernetes.core.k8s', api_version='kiali.io/v1alpha1', kind='OSSMPlugin', namespace=cr_namespace, resource_name=custom_resource.metadata.name) }}"

- name: Get OSSMPlugin Operator Pod
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ossmplugin.operator_namespace }}"
    label_selectors:
    - app.kubernetes.io/name = ossmplugin-operator
  register: ossmplugin_operator_pod

- name: Get OSSMPlugin Pod
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ossmplugin.install_namespace }}"
    label_selectors:
    - "app.kubernetes.io/instance=ossmplugin"
  register: ossmplugin_pod


- name: Get OSSMPlugin Deployment
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ ossmplugin.install_namespace }}"
    label_selectors:
    - "app.kubernetes.io/instance=ossmplugin"
  register: ossmplugin_deployment
