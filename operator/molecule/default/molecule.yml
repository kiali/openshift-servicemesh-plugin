---
dependency:
  name: galaxy
driver:
  name: $DORP
platforms:
- name: default
  groups:
  - k8s
provisioner:
  name: ansible
  config_options:
    defaults:
      callback_enabled: junit
  playbooks:
    destroy: ../default/destroy.yml
    prepare: ../default/prepare.yml
    cleanup: ../default/cleanup.yml
  inventory:
    group_vars:
      all:
        cr_file_path: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/molecule/ossmplugin-cr.yaml"
        cr_namespace: "{{ 'ossmplugin-operator' if (lookup('env', 'MOLECULE_OPERATOR_INSTALLER') | default('helm', True) == 'helm') else 'istio-system' }}" # if external operator, assume CR must go in control plane namespace
        wait_retries: "{{ lookup('env', 'MOLECULE_WAIT_RETRIES') | default('360', True) }}"
        istio:
          control_plane_namespace: istio-system
        ossmplugin:
          install_namespace: istio-system
          operator_namespace: "{{ 'openshift-operators' if (query('kubernetes.core.k8s', kind='Namespace', resource_name='openshift-operators') | length > 0) else 'operators' }}"
          operator_image_name: "{{ 'image-registry.openshift-image-registry.svc:5000/kiali/ossmplugin-operator' if lookup('env', 'MOLECULE_OSSMPLUGIN_OPERATOR_IMAGE_NAME') == 'dev' else (lookup('env', 'MOLECULE_OSSMPLUGIN_OPERATOR_IMAGE_NAME')|default('quay.io/kiali/ossmplugin-operator', True)) }}"
          operator_version: "{{ lookup('env', 'MOLECULE_OSSMPLUGIN_OPERATOR_IMAGE_VERSION')|default('latest', True) }}"
          operator_watch_namespace: ""
          operator_image_pull_policy: "{{ lookup('env', 'MOLECULE_OSSMPLUGIN_OPERATOR_IMAGE_PULL_POLICY')|default('Always', True) }}"
          image_name: "{{ 'image-registry.openshift-image-registry.svc:5000/kiali/ossmplugin' if lookup('env', 'MOLECULE_OSSMPLUGIN_IMAGE_NAME') == 'dev' else ('quay.io/kiali/ossmplugin' if ansible_env.MOLECULE_OSSMPLUGIN_IMAGE_NAME is not defined else lookup('env', 'MOLECULE_OSSMPLUGIN_IMAGE_NAME')) }}"
          image_version: "{{ 'latest' if ansible_env.MOLECULE_OSSMPLUGIN_IMAGE_VERSION is not defined else lookup('env', 'MOLECULE_OSSMPLUGIN_IMAGE_VERSION') }}"
          image_pull_policy: "{{ lookup('env', 'MOLECULE_OSSMPLUGIN_IMAGE_PULL_POLICY')|default('Always', True) }}"
scenario:
  name: default
  test_sequence:
  - prepare
  - converge
  - destroy
